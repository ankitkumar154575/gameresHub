@RestController
@RequestMapping("/api/reports")
public class ReportController {

    @Autowired
    private ExcelService excelService;

    @Autowired
    private EmailService emailService;

    @Autowired
    private EsopRejectedReferralRepository rejectedReferralRepo;

    @Autowired
    private EsopIgnoredReconRepository ignoredReconRepo;

    @Autowired
    private EsopIwiReconRepository iwiReconRepo;

    @Value("${excel.file.path}")
    private String filePath;

    // ✅ 1️⃣ API to Generate Excel
    @PostMapping("/generate-excel")
    public ResponseEntity<String> generateExcel() {
        try {
            List<EsopRejectedReferral> rejectedReferrals = rejectedReferralRepo.findAll();
            List<EsopIgnoredRecon> ignoredRecons = ignoredReconRepo.findAll();
            List<EsopIwiRecon> iwiRecons = iwiReconRepo.findAll();

            // Generate Excel File
            excelService.generateExcelFile(rejectedReferrals, ignoredRecons, iwiRecons);

            return ResponseEntity.ok("Excel file generated successfully at: " + filePath);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body("Error generating Excel: " + e.getMessage());
        }
    }

    // ✅ 2️⃣ API to Send Email with Excel Attachment
    @PostMapping("/send-email")
    public ResponseEntity<String> sendEmail() {
        try {
            String subject = "eSOP to CMT Reconciliation Report";
            String body = "Please see the attached Reconciliation Report that was processed on " + LocalDate.now() + ".";

            emailService.sendEmailWithAttachment("ankitkumar154575@gmail.com", subject, body, filePath);

            return ResponseEntity.ok("Email sent successfully with the Excel attachment!");
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body("Error sending email: " + e.getMessage());
        }
    }
}
